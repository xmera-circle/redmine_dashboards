<%= call_hook :view_dashboard_top, dashboard: dashboard, project: @project %>
<%=tag.div id: 'my-page', class: "splitcontent #{dashboard_css_classes dashboard}" do %>
  <% dashboard.available_groups.each do |group| %>
    <% style = (dashboard.layout[group].present? && User.current.logged?) ?  'box' : 'disable'  %>
    <%= tag.div id: "list-#{group}", class: "block-receiver splitcontent#{group} #{style}" do %>
      <%= render_dashboard_blocks dashboard.layout[group], dashboard %>
    <% end %>
  <% end %>
<% end %>

<%= call_hook :view_dashboard_bottom, dashboard: dashboard, project: @project %>

<%= context_menu %>

<%
# required for drap & drop work
# (this should always set, because to support new entries)
%>

<% include_calendar_headers_tags %>

<% if dashboard.content.with_chartjs? %>
  <% content_for :header_tags do %>
    <% # chartjs_datalabels %>
    <%= javascript_include_tag "Chart.bundle.min", plugin: 'redmine_dashboards' %>
    <%= javascript_include_tag "chartjs-plugin-colorschemes.min", plugin: 'redmine_dashboards' %>
  <% end %>
<% end %>

<%= javascript_tag do %>
  $(function() {
    $('#block-select').val('');
    $('.block-receiver').sortable({
      connectWith: '.block-receiver',
      tolerance: 'pointer',
      handle: '.sort-handle',
      start: function(event, ui){$(this).parent().addClass('dragging');},
      stop: function(event, ui){$(this).parent().removeClass('dragging');},
      update: function(event, ui){
        // trigger the call on the list that receives the block only
        if ($(this).find(ui.item).length > 0) {
          $.ajax({
            url: "<%= escape_javascript order_blocks_dashboard_path(dashboard) %>",
            type: 'post',
            data: {
              'group': $(this).attr('id').replace(/^list-/, ''),
              'block_ids': $.map($(this).children(), function(el){return $(el).attr('id').replace(/^block-/, '');})
            }
          });
        }
      }
    });
  });
<% end %>